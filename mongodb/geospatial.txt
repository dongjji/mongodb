1. insert
  db.places.insertOne({name: "California Academy of Sciences", location: {type: "Point", coordinates: [-122, 37]}})

2. find
  db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}}}})
    => 에러발생
    Error: error: {
        "ok" : 0,
        "errmsg" : "error processing query: ns=userData.placesTree: GEONEAR  field=location maxdist=1.797
69e+308 isNearSphere=0\nSort: {}\nProj: {}\n planner returned error :: caused by :: unable to find index
for $geoNear query",
        "code" : 291,
        "codeName" : "NoQueryExecutionPlans"
}

3. 해결방법: 인덱스 설정하기 db.places.createIndex({location: "2dsphere"})
    > db.places.createIndex({location: "2dsphere"})
    {
            "createdCollectionAutomatically" : false,
            "numIndexesBefore" : 1,
            "numIndexesAfter" : 2,
            "ok" : 1
    }
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}}}})
    { "_id" : ObjectId("611d1026535e8e7403dabc29"), "name" : "California Academy of Sciences", "location" : {
    "type" : "Point", "coordinates" : [ -122, 37 ] } }

4. $maxDistance
  db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 20}}})
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 20}}})
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 200}}})
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 2000}}})
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 20000}}})
    > db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.47, 37.77]}, $maxDistance: 200000}}})
    { "_id" : ObjectId("611d1026535e8e7403dabc29"), "name" : "California Academy of Sciences", "location" : {
    "type" : "Point", "coordinates" : [ -122, 37 ] } }

5. additional locations
  db.places.insertOne({name: "Conservatory of Flowers", location: {type: "Point", coordinates: [-122.4615748, 37.7701756]}})
  db.places.insertOne({name: "Golden Gate Tennis Park", location: {type: "Point", coordinates: [-122.4593702, 37.7705046]}})
  db.places.insertOne({name: "Nopa", location: {type: "Point", coordinates: [-122.4389058, 37.7747415]}})

6. 특정 지역에서 검색하기(사각형좌표이용) $geoWithin
  p1->p2->p3->p4->p1의 영역을 지정해주고 $geoWithin을 이용하여 검색한다. 이 때 type은 Polygon이다.
  const p1 = [-122.4547, 37.77473]
  const p2 = [-122.45303, 37.76641]
  const p3 = [-122.51026, 37.76411]
  const p4 = [-122.51088, 37.77131]
  > db.places.find({location: {$geoWithin: {$geometry: {type: "Polygon", coordinates: [[p1, p2, p3, p4, p1]]}}}}).pretty()
    {
            "_id" : ObjectId("611d127f535e8e7403dabc2a"),
            "name" : "Conservatory of Flowers",
            "location" : {
                    "type" : "Point",
                    "coordinates" : [
                            -122.4615748,
                            37.7701756
                    ]
            }
    }
    {
            "_id" : ObjectId("611d12b6bdd36b345e8f0ec6"),
            "name" : "Golden Gate Tennis Park",
            "location" : {
                    "type" : "Point",
                    "coordinates" : [
                            -122.4593702,
                            37.7705046
                    ]
            }
    }

7. $geoIntersects : 해당 좌표가 6번에서 어떤 영역 안에 있는지 확인
  db.places.insertOne({name: "Golden Gate Park", area: {type: "Polygon", coordinates: [[p1, p2, p3, p4, p1]]}})
  db.places.createIndex({area: "2dsphere"})
  // 영역 안에 있는 좌표 지정
  db.places.find({area: {$geoIntersects: {$geometry: {type: "Point", coordinates: [-122.49089, 37.76992]}}}})
    {
        "_id" : ObjectId("611d16bfbdd36b345e8f0ec8"),
        "name" : "Golden Gate Park",
        "area" : {
                "type" : "Polygon",
                "coordinates" : [
                        [
                                [
                                        -122.4547,
                                        37.77473
                                ],
                                [
                                        -122.45303,
                                        37.76641
                                ],
                                [
                                        -122.51026,
                                        37.76411
                                ],
                                [
                                        -122.51088,
                                        37.77131
                                ],
                                [
                                        -122.4547,
                                        37.77473
                                ]
                        ]
                ]
        }
    }
  //  영역 밖에 있는 좌표 지정
  db.places.find({area: {$geoIntersects: {$geometry: {type: "Point", coordinates: [-122.49089, 38.76992]}}}})
  =>리턴값 없음

8. n km 반경 안에 있는 지역 찾아내기 (1 / 6,378.1은 1km를 뜻함)
  db.places.find({location: {$geoWithin: {$centerSphere: [[-122.46203, 37.77286], 1 / 6378.1]}}}).pretty()
    {
            "_id" : ObjectId("611d127f535e8e7403dabc2a"),
            "name" : "Conservatory of Flowers",
            "location" : {
                    "type" : "Point",
                    "coordinates" : [
                            -122.4615748,
                            37.7701756
                    ]
            }
    }
    {
            "_id" : ObjectId("611d12b6bdd36b345e8f0ec6"),
            "name" : "Golden Gate Tennis Park",
            "location" : {
                    "type" : "Point",
                    "coordinates" : [
                            -122.4593702,
                            37.7705046
                    ]
            }
    }
  